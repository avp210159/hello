

CLI commands for github API v3 (replace all CAPS keywords):

curl -u 'USER' https://api.github.com/user/repos -d '{"name":"REPO"}'
# Remember replace USER with your username and REPO with your repository/application name!
git remote add origin git@github.com:USER/REPO.git
git push origin master

shareimprove this answer
	
edited Sep 2 '13 at 21:07
Michael Durrant
43.6k43177283
	
answered Apr 25 '12 at 23:38
bennedich
6,76842231
	
26 	 
	
The slight problem with first command is that you are leaving your GitHub password in your ~/.bash_history. I would suggest replace -u 'USER:PASS' with -u 'USER', then curl will ask you for password interactively. – ivanzoid Dec 1 '12 at 14:31
9 	 
	
To make the repo private from the start, use: curl -u 'USER' https://api.github.com/user/repos -d '{"name":"REPO", "private":"true"}' – Joe Fletcher Mar 21 '13 at 4:05
1 	 
	
I wrote a bash script to save us all some typing. Takes user input and has sensible defaults: gist.github.com/robwierzbowski/5430952 – RobW Apr 21 '13 at 20:35
   	 
	
Here's a Git alias for this. – Mechanical snail May 27 '13 at 4:06
1 	 
	
Here's how to add it as a git alias: git config --global alias.gh-create '!sh -c "curl -u \"USERNAME\" https://api.github.com/user/repos -d \"{\\\"name\\\":\\\"$1\\\"}\"" -' – Robin Winslow Jun 7 '13 at 15:53
1 	 
	
Actually @MattTagg's comment below is now my preferred solution - Hub is a brilliant project for managing all sorts of GitHub actions on the command-line. – Robin Winslow Jun 13 '13 at 8:42
   	 
	
If using an org account, need to change the curl command to use .../orgs/ORGNAME/repos instead of .../user/repos, like curl -u 'USER' https://api.github.com/orgs/ORGNAME/repos -d '{"name":"REPO"}' – Stuart R. Jefferys Jul 29 '13 at 17:57
3 	 
	
Don't forget that you can generate an access token and use it this way: curl https://api.github.com/user/repos?access_token=myAccessToken -d '{"name":"REPO"}'. :-) – Ionică Bizău May 28 '14 at 8:17
   	 
	
oddly git remote add origin git@github.com:USER/REPO.git (SSH URL) did not work for me, but the HTTPS URL form does: git remote add origin https://github.com/USER/REPO.git – Kai Carver Oct 18 '15 at 11:57

==========
result:
avp@wubu:hello$ curl -u 'avpXXX...:ZZZ...' https://api.github.com/user/repos -d '{"name":"hello"}'
{
  "id": 59662819,
  "name": "hello",
  "full_name": "avp210159/hello",
  "owner": {
    "login": "avp210159",
    "id": 11545413,
    "avatar_url": "https://avatars.githubusercontent.com/u/11545413?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avp210159",
    "html_url": "https://github.com/avp210159",
    "followers_url": "https://api.github.com/users/avp210159/followers",
    "following_url": "https://api.github.com/users/avp210159/following{/other_user}",
    "gists_url": "https://api.github.com/users/avp210159/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avp210159/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avp210159/subscriptions",
    "organizations_url": "https://api.github.com/users/avp210159/orgs",
    "repos_url": "https://api.github.com/users/avp210159/repos",
    "events_url": "https://api.github.com/users/avp210159/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avp210159/received_events",
    "type": "User",
    "site_admin": false
  },
  "private": false,
  "html_url": "https://github.com/avp210159/hello",
  "description": null,
  "fork": false,
  "url": "https://api.github.com/repos/avp210159/hello",
  "forks_url": "https://api.github.com/repos/avp210159/hello/forks",
  "keys_url": "https://api.github.com/repos/avp210159/hello/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/avp210159/hello/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/avp210159/hello/teams",
  "hooks_url": "https://api.github.com/repos/avp210159/hello/hooks",
  "issue_events_url": "https://api.github.com/repos/avp210159/hello/issues/events{/number}",
  "events_url": "https://api.github.com/repos/avp210159/hello/events",
  "assignees_url": "https://api.github.com/repos/avp210159/hello/assignees{/user}",
  "branches_url": "https://api.github.com/repos/avp210159/hello/branches{/branch}",
  "tags_url": "https://api.github.com/repos/avp210159/hello/tags",
  "blobs_url": "https://api.github.com/repos/avp210159/hello/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/avp210159/hello/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/avp210159/hello/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/avp210159/hello/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/avp210159/hello/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/avp210159/hello/languages",
  "stargazers_url": "https://api.github.com/repos/avp210159/hello/stargazers",
  "contributors_url": "https://api.github.com/repos/avp210159/hello/contributors",
  "subscribers_url": "https://api.github.com/repos/avp210159/hello/subscribers",
  "subscription_url": "https://api.github.com/repos/avp210159/hello/subscription",
  "commits_url": "https://api.github.com/repos/avp210159/hello/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/avp210159/hello/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/avp210159/hello/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/avp210159/hello/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/avp210159/hello/contents/{+path}",
  "compare_url": "https://api.github.com/repos/avp210159/hello/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/avp210159/hello/merges",
  "archive_url": "https://api.github.com/repos/avp210159/hello/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/avp210159/hello/downloads",
  "issues_url": "https://api.github.com/repos/avp210159/hello/issues{/number}",
  "pulls_url": "https://api.github.com/repos/avp210159/hello/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/avp210159/hello/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/avp210159/hello/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/avp210159/hello/labels{/name}",
  "releases_url": "https://api.github.com/repos/avp210159/hello/releases{/id}",
  "deployments_url": "https://api.github.com/repos/avp210159/hello/deployments",
  "created_at": "2016-05-25T12:51:01Z",
  "updated_at": "2016-05-25T12:51:01Z",
  "pushed_at": "2016-05-25T12:51:03Z",
  "git_url": "git://github.com/avp210159/hello.git",
  "ssh_url": "git@github.com:avp210159/hello.git",
  "clone_url": "https://github.com/avp210159/hello.git",
  "svn_url": "https://github.com/avp210159/hello",
  "homepage": null,
  "size": 0,
  "stargazers_count": 0,
  "watchers_count": 0,
  "language": null,
  "has_issues": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "forks_count": 0,
  "mirror_url": null,
  "open_issues_count": 0,
  "forks": 0,
  "open_issues": 0,
  "watchers": 0,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "push": true,
    "pull": true
  },
  "network_count": 0,
  "subscribers_count": 1
}

YES!!!! repo on github created!!!

===========
так НЕ получилось
avp@wubu:hello$ git remote add origin git@github.com:avp210159/hello.git
avp@wubu:hello$ git push origin maste
error: src refspec maste does not match any.
error: failed to push some refs to 'git@github.com:avp210159/hello.git'
avp@wubu:hello$ 
avp@wubu:hello$ echo '#hello' >README.md
avp@wubu:hello$ git add README.md
avp@wubu:hello$ git ci -a -m "add README.md for git"
[master 213ddd5] add README.md for git
 1 file changed, 1 insertion(+)
 create mode 100644 README.md
avp@wubu:hello$ git push origin master
The authenticity of host 'github.com (192.30.252.122)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.252.122' (RSA) to the list of known hosts.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
avp@wubu:hello$ 

========
а так получилось
avp@wubu:hello$ git remote remove origin
avp@wubu:hello$ git remote add origin https://github.com/avp210159/hello
avp@wubu:hello$ git push origin master
Username for 'https://github.com': avp210159
Password for 'https://avp210159@github.com': 
Counting objects: 29, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (20/20), done.
Writing objects: 100% (29/29), 4.64 KiB | 0 bytes/s, done.
Total 29 (delta 2), reused 0 (delta 0)
To https://github.com/avp210159/hello
 * [new branch]      master -> master
avp@wubu:hello$ 

===
 try to push after clone

======= OK push OK ======== change on github =========

work for modification times preserve begins...

read current HEAD:
cat .git/$(sed 's/^ref: //' .git/HEAD)
d4aaa797e11fa2bfdfb0a80667779c1cd289554f
list of modified (need commit) files
git st -s | sed 's/M* *//'

try precommit:
MFILE=$(git rev-parse --verify HEAD)
echo precommit $MFILE
$(git diff --cached --name-only)

try postcommit:
MFILE=$(git rev-parse --verify HEAD)
echo postcommit $MFILE
git show --pretty="format:" --name-only
echo end postcommit

Try Again
All in postcommit (try commit --amend into postcommit)
2-nd attempt
3-d attempt (remove nested commit)
4-d ...
5-th
...
???-th
And again
and again mistake

---------
Well, try other way/
if -f .gitimes/sentinel then
  rm .gitimes/sentinel ; exit
fi
MFILE=$(git rev-parse --verify HEAD)
git ls-tree -r --name-only $MFILE | grep -v .gitimes/
and make in .gitimes/$MFILE sh-script with touch all these files
touch ./gitimes sentinel
commit --amend $MFILE
-------------

attempt 2

add chmod +x sh-file

and again

====
The problem is that commit --amend changes commit-SHA
So, try to save mtimes in versioned file .cur-mtimes with current HEAD-SHA

---
here it is:
#!/bin/sh
#
# add mtimes of commited files to .mtimes
#

#echo GIT_DIR: $GIT_DIR
#echo GIT_WORK_TREE: $GIT_WORK_TREE
#echo GIT_INDEX_FILE: $GIT_INDEX_FILE
BRANCH=$(git status -s -b --p | head -1)
echo \#$(date) WD:$(pwd)  \($BRANCH $(git rev-parse HEAD)\) >.tmp1-cur-mtimes

> .tmp2-cur-mtimes
for i in $(git ls-tree -r --name-only HEAD | grep -v .cur-mtimes)
do
#    echo process $i
    mt=$(date +%Y%m%d%H%M.%S -r $i)
    echo "touch -m -t $mt '$i'" >> .tmp2-cur-mtimes
done

if [ -f .cur-mtimes ] ; then
    tail -n +2 .cur-mtimes > .tmp3-cur-mtimes
    if cmp .tmp2-cur-mtimes .tmp3-cur-mtimes >/dev/null 2>&1 ; then
	echo No mtime changes
	rm -f .tmp[1-3]-* 
	exit
    fi
fi

cat .tmp1-cur-mtimes .tmp2-cur-mtimes >.cur-mtimes
chmod +x .cur-mtimes
rm -f .tmp[1-3]-*
git add .cur-mtimes
---

try again
---

==================

Сделал ветку mtime according to

"  Moving to a new branch

Unless there are other circumstances involved, this can be easily done by branching and rolling back.

git branch newbranch
git reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work.*1
git checkout newbranch

But do make sure how many commits to go back. Alternatively, you can instead of HEAD~3, simply provide the hash of the commit you want to "revert back to" on the master (/current) branch, e.g:

git reset --hard a1b2c3d4   
    "

git br mtime
git br
ll ..
(cd ..; tar czf hello.tgz ./hello)
git reset --hard d4aaa79
git co mtime 
ll
./.cur-mtimes-wubu-avp

Пытаюсь удалить (сжать?) лишние коммиты внутре нее ....

git rebase -i a31734c
...
pick a1aee23 mtime postcommit 2
s a54cd63 mtime postcommit 3
s 312e92b mtime postcommit 3 4
s a59abd9 mtime with nested commit in postcommit
pick 1cc0c8a mtime with nested commit in postcommit 2-nd
pick 81ddd75 mtime with nested commit in postcommit 2-nd
...
[detached HEAD a78f31e] mtime postcommit 2
 Date: Fri Jun 3 14:43:49 2016 +0300
 3 files changed, 21 insertions(+), 1 deletion(-)
error: could not apply 6502c2b... new .mtimes filename and hook script +
...
git rebase --skip // 2 раза
и получил

avp@wubu:hello$ git hist
* b25f135 2016-06-14 | change pre-commit description in README (HEAD -> mtime) [avp]
* 769203c 2016-06-09 | new .mtimes filename and hook script ++ [avp]
* 5772aa5 2016-06-09 | new .mtimes filename and hook script [avp]
* f1133bc 2016-06-07 | add BRANCH= to Notes [avp]
* 8466fd0 2016-06-07 | restore mtimes in master [avp]
* 410c835 2016-06-07 | ya some  changes in Notes and mtimes script [avp]
* 5521c2b 2016-06-07 | some changes in Notes and mtimes script [avp]
* 1bca0a4 2016-06-07 | switch to style ... [avp]
* e6940ab 2016-06-07 | delete .gittimes/ from .gitignore [avp]
* 997850d 2016-06-07 | mtimes pre-commit test2 [avp]
* 0ae652c 2016-06-07 | mtimes pre-commit 1-st [avp]
* 27f0a95 2016-06-07 | delete .gitimes/, switch to pre-commit .mtimes [avp]
* 2445d81 2016-06-07 | mtimes in pre-commit (initial test 2 (--amend)) [avp]
* 3f45c3f 2016-06-06 | mtimes sentinel again 3-nd [avp]
* 1864dad 2016-06-06 | mtimes sentinel again 2-nd [avp]
* 405f67b 2016-06-06 | mtimes sentinel again [avp]
* 462e6fc 2016-06-06 | mtimes sentinel 3-st [avp]
* 646499f 2016-06-06 | mtimes with sentinel 2-nd () [avp]
* 7e0ca75 2016-06-06 | mtimes with sentinel 1-st [avp]
* 7041124 2016-06-03 | mtime postcommit ./gitimes +n-th mistake [avp]
* 28eb4ed 2016-06-03 | mtime postcommit ./gitimes +n-th [avp]
* 748d4e2 2016-06-03 | mtime postcommit ./gitimes n-th [avp]
* 83e1ed8 2016-06-03 | mtime postcommit ./gitimes [avp]
* c377298 2016-06-03 | mtime postcommit 5-th [avp]
* 5301a83 2016-06-03 | mtime postcommit 4-th [avp]
* 6927dd4 2016-06-03 | mtime with nested commit in postcommit 2-nd [avp]
* 6ddf211 2016-06-03 | mtime with nested commit in postcommit 2-nd [avp]
* a78f31e 2016-06-03 | mtime postcommit 2 [avp]
* a31734c 2016-06-02 | mtime work begins [avp]
* d4aaa79 2016-05-26 | try .md formatting in README [avp]
* b9db73c 2016-05-25 | github push from home OK [Vasily]
* 1ff513c 2016-05-25 | change Git-Notes, try PUSH! [avp]
* b6a9482 2016-05-25 | change readme, try to pull changes after clone [avp]
* f7ae83c 2016-05-25 | hide email [Vasily]
* eeac95f 2016-05-25 | add .gitignore ~/.gitconfig as my-home-... [avp]
* 566eb66 2016-05-25 | add can do/can't do in Git-Notes [avp]
* 213ddd5 2016-05-25 | add README.md for git [avp]
* 4e2c742 2016-05-25 | result of curl in Git-Notes [avp]
* 57953e4 2016-05-25 | add Git-Notes file [avp]
* 8a6023f 2016-05-24 | Added index.html. [avp]
* a828998 2016-05-24 | Moved hello.html to lib [avp]
* ba52194 2016-05-24 | Add author/email [avp]
* f9de6a7 2016-05-20 | Added HTML header (tag: v1) [avp]
* 8d54403 2016-05-20 | Added standard HTML page tags (tag: v1-beta) [avp]
* 05bb38e 2016-05-20 | Edit <h1> tag [avp]
* a7da921 2016-05-20 | First Commit [avp]

т.е. лишние, отмеченные `s` слились с первым и остался его коммент.
Пробуем дальше ...

поудалял строк в git rebase -i 6ddf2
потом говорил много git rebese --skip
получил

* 2f7aecd 2016-06-14 | change pre-commit description in README (HEAD -> mtime) [avp]
* 0dd8e2a 2016-06-09 | new .mtimes filename and hook script ++ [avp]
* 88c5a7d 2016-06-03 | mtime with nested commit in postcommit 2-nd [avp]
* 6ddf211 2016-06-03 | mtime with nested commit in postcommit 2-nd [avp]
* a78f31e 2016-06-03 | mtime postcommit 2 [avp]
* a31734c 2016-06-02 | mtime work begins [avp]
* d4aaa79 2016-05-26 | try .md formatting in README [avp]
* b9db73c 2016-05-25 | github push from home OK [Vasily]
* 1ff513c 2016-05-25 | change Git-Notes, try PUSH! [avp]
* b6a9482 2016-05-25 | change readme, try to pull changes after clone [avp]
* f7ae83c 2016-05-25 | hide email [Vasily]
* eeac95f 2016-05-25 | add .gitignore ~/.gitconfig as my-home-... [avp]
* 566eb66 2016-05-25 | add can do/can't do in Git-Notes [avp]
* 213ddd5 2016-05-25 | add README.md for git [avp]
* 4e2c742 2016-05-25 | result of curl in Git-Notes [avp]
* 57953e4 2016-05-25 | add Git-Notes file [avp]
* 8a6023f 2016-05-24 | Added index.html. [avp]
* a828998 2016-05-24 | Moved hello.html to lib [avp]
* ba52194 2016-05-24 | Add author/email [avp]
* f9de6a7 2016-05-20 | Added HTML header (tag: v1) [avp]
* 8d54403 2016-05-20 | Added standard HTML page tags (tag: v1-beta) [avp]
* 05bb38e 2016-05-20 | Edit <h1> tag [avp]
* a7da921 2016-05-20 | First Commit [avp]

совсем не то, что ожидал, но последний коммит тут
почему-то вылезает touch -m -t '.gitimes/d4aaa797e11fa2bfdfb0a80667779c1cd289554f' в cat .cur-mtimes-wubu-avp

try again another commit ...
